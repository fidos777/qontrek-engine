name: Atlas CI - Drift Guard & Tests

on:
  push:
    branches: [main, master, claude/**]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Build Atlas registry
        run: npm run atlas:build

      - name: Check for registry drift
        id: drift-check
        run: |
          if git diff --exit-code public/mcp/*.json; then
            echo "✅ No drift detected in MCP registry"
            echo "drift=false" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Drift detected in MCP registry"
            echo "drift=true" >> $GITHUB_OUTPUT
          fi

      - name: Fail on drift (unless UPDATE_REGISTRY=true)
        if: steps.drift-check.outputs.drift == 'true' && !contains(github.event.head_commit.message, 'UPDATE_REGISTRY')
        run: |
          echo "::error::Registry drift detected. Commit with UPDATE_REGISTRY in message to override."
          exit 1

      - name: Comment on PR (if drift)
        if: steps.drift-check.outputs.drift == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '⚠️ **Registry Drift Detected**\n\nThe MCP registry files have changed. If this is intentional, include `UPDATE_REGISTRY` in your commit message.'
            })

  coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Check coverage threshold
        run: |
          echo "Coverage check completed"
          # Coverage threshold check would go here
