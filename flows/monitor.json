{
  "name": "Flow Monitor - WhatsApp Health",
  "nodes": [
    {
      "parameters": {
        "rule": "everyX",
        "unit": "minutes",
        "value": 5
      },
      "id": "1",
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        160,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT COUNT(*) AS unmetered_count\nFROM public.vw_unmetered_24h;"
      },
      "id": "2",
      "name": "Fetch Unmetered Count",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        440,
        180
      ],
      "credentials": {
        "postgres": "Supabase"
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.unmetered_count}}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "3",
      "name": "Unmetered Pending?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        700,
        180
      ]
    },
    {
      "parameters": {
        "channel": "#alerts-whatsapp",
        "text": "=:rotating_light: {{$json.unmetered_count}} WhatsApp sends pending metering in the last 24 hours."
      },
      "id": "4",
      "name": "Slack Unmetered Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        960,
        180
      ],
      "credentials": {
        "slackApi": "Slack Bot"
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH events AS (\n    SELECT COUNT(*) AS total_events\n    FROM public.events_raw\n    WHERE created_at >= now() - interval '24 hours'\n), templates AS (\n    SELECT COUNT(*) AS total_templates,\n           SUM(CASE WHEN status = 'sent' THEN 1 ELSE 0 END) AS sent_count\n    FROM public.wa_template_log\n    WHERE created_at >= now() - interval '24 hours'\n)\nSELECT\n  events.total_events,\n  templates.total_templates,\n  templates.sent_count,\n  (events.total_events = templates.total_templates) AS acceptance_match\nFROM events, templates;"
      },
      "id": "5",
      "name": "Fetch Acceptance Window",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        440,
        420
      ],
      "credentials": {
        "postgres": "Supabase"
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": false,
              "value2": "={{$json.acceptance_match}}"
            }
          ]
        }
      },
      "id": "6",
      "name": "Acceptance Mismatch?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        700,
        420
      ]
    },
    {
      "parameters": {
        "channel": "#alerts-whatsapp",
        "text": "=:warning: Acceptance mismatch detected. Events={{$json.total_events}} vs Sends={{$json.total_templates}} (Sent OK={{$json.sent_count}})."
      },
      "id": "7",
      "name": "Slack Acceptance Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        960,
        420
      ],
      "credentials": {
        "slackApi": "Slack Bot"
      }
    }
  ],
  "connections": {
    "Cron": {
      "main": [
        [
          {
            "node": "Fetch Unmetered Count",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fetch Acceptance Window",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Unmetered Count": {
      "main": [
        [
          {
            "node": "Unmetered Pending?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unmetered Pending?": {
      "main": [
        [
          {
            "node": "Slack Unmetered Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Acceptance Window": {
      "main": [
        [
          {
            "node": "Acceptance Mismatch?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Acceptance Mismatch?": {
      "main": [
        [
          {
            "node": "Slack Acceptance Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {}
}
