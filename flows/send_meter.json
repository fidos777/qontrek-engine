{
  "name": "send_meter",
  "description": "Local test fixture aligned to pytest expectations",
  "nodes": [
    {
      "name": "Set Brand Context",
      "type": "sql",
      "parameters": {
        "query": "select set_config('app.brand','voltek', true);"
      }
    },
    {
      "name": "Build Payload",
      "type": "js",
      "parameters": {
        "module": "flows/js/payload_builder.js",
        "export": "buildPayload"
      }
    },
    {
      "name": "Send WhatsApp",
      "type": "http",
      "parameters": {
        "method": "POST",
        "url": "https://api.whatsapp.test/send",
        "body": {
          "template": "meter_notice",
          "idempotency_key": "{{$json.idempotency_key}}"
        },
        "options": {
          "retry": {
            "maxAttempts": 3,
            "waitBetweenAttempts": 2000,
            "waitBetweenAttemptsMax": 8000
          }
        }
      }
    },
    {
      "name": "Log Template Sent",
      "type": "sql",
      "parameters": {
        "query": "insert into whatsapp_logs(idempotency_key, status, event) values ('{{$json.idempotency_key}}', 'sent', 'sent');"
      }
    },
    {
      "name": "Log Template Reversed",
      "type": "sql",
      "parameters": {
        "query": "with _ as (select set_config('app.brand','voltek', true)) insert into whatsapp_logs(idempotency_key, status, event, reversal_reason) values ('{{$json.idempotency_key}}', 'reversed', 'reversed', 'auto_reversal');"
      }
    },
    {
      "name": "Log Template Held",
      "type": "sql",
      "parameters": {
        "query": "with _ as (select set_config('app.brand','voltek', true)) insert into whatsapp_logs(idempotency_key, status, policy_hold_reason, event) values ('{{$json.idempotency_key}}', 'held', 'template_locale_missing', 'held');"
      }
    },
    {
      "name": "Insert Credit Log",
      "type": "sql",
      "parameters": {
        "query": "insert into credit_log(idempotency_key, action) values ('{{$json.idempotency_key}}','meter_send');"
      }
    },
    {
      "name": "Mark Held",
      "type": "function",
      "parameters": {
        "functionCode": "function markHeld(item){ item.json = item.json||{}; item.json.policy_hold_reason = item.json.policy_hold_reason || 'template_locale_missing'; return item; }"
      }
    }
  ]
}
