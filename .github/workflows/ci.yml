name: Qontrek CI

on:
  push:
    branches: [ "main", "claude/**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cockpit-ui
    steps:
      # 1) Checkout repo + submodules
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          submodules: recursive
          fetch-depth: 0

      # 2) Verify submodule pointer
      - name: List submodules
        working-directory: .
        run: git submodule status

      # 3) Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # 4) Install native build toolchain
      - name: Install native dependencies
        working-directory: .
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential python3 libsqlite3-dev

      # 5) Install dependencies
      - name: Install dependencies
        run: npm install

      # 6) Type check
      - name: Type check
        run: npm run type-check

      # 7) Run tests with coverage
      - name: Run tests
        run: npm test
        continue-on-error: true

      # 8) Build application
      - name: Build application
        run: |
          npm run build || {
            echo "Build failed. Showing npm debug log tail:"
            tail -n 100 ~/.npm/_logs/*-debug*.log 2>/dev/null || echo "No npm debug logs found"
            exit 1
          }

      # 9) Secrets scanning with gitleaks
      - name: Secrets scanning
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      # 10) Generate SBOM
      - name: Generate SBOM
        run: |
          npx @cyclonedx/cyclonedx-npm --output-file ../proof/sbom_cyclonedx.json
          npm audit --json --omit=dev > ../proof/npm_audit.json || true

      # 11) Factory Runtime Seal - Compute proof hashes and upload to Tower
      - name: Factory Runtime Seal
        working-directory: .
        env:
          TOWER_URL: ${{ secrets.TOWER_URL || 'http://localhost:3000' }}
          FACTORY_SIGNING_SECRET: ${{ secrets.FACTORY_SIGNING_SECRET }}
          FACTORY_KEY_ID: ${{ secrets.FACTORY_KEY_ID || 'factory-key-001' }}
        run: |
          npm install node-fetch@2
          node scripts/ci_tower_upload.js

      # 12) Upload Tower receipt as artifact
      - name: Upload Tower receipt
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tower-receipt
          path: |
            proof/tower_receipt_v1.json
            proof/factory_runtime_seal.json
          retention-days: 90

      # 13) Upload proof bundle
      - name: Upload proof bundle
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: proof-bundle
          path: proof/
          retention-days: 90
